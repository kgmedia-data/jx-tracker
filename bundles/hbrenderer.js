/**
 * Bundle built to make HB rendering script
 * Very simple the whole creative is already in base64 encoded string
 * No need fetch ad.
 * But we support more than 1 creative though
 * Means the script loaded once only but if within same window
 * there are multiple chances to do work, we will
 */

if (window.jxhbuniversal && window.jxhbuniversal.hbinit) {
    return;
}

const mrenderer     = require('../components/renderer/core');

/* This is the blob generated by adserver
`<div id="jxoutstream${rannum}" 
style="width: 100%;"> 
<script type="text/javascript" src="${consts.hbSALRenderUrl}" defer=""></script> 
<script> var p ={ 
    tsjsrun: Date.now(), 
    responsive: 1, 
    nested: -1,
     maxwidth: 640, 
      container: "jxoutstream${rannum}",
       jsoncreativeobj64: "${hbresponse64}"
    };
        function jxdefer(p) { if (window.${jxuniversal_}) { window.${jxuniversal_}.hbinit(p); } else { setTimeout(function() { jxdefer(p) }, 100); } } fetch('${dbgScriptRunUrl}&tsjsrun=' + p.tsjsrun); jxdefer(p); </script> </div>`;            
*/        
//no need lah var instMap = new Map();

function start_(options) {
    var inst = mrenderer.createInstance(options);
    //no need lah instMap.set(hashStr, inst);
}

window.jxhbuniversal = {
    hbinit: start_
};

